endpoint: # default {}
  port: 8888 # default 8888
  host: "0.0.0.0" # default "0.0.0.0"
  auth: # default {}
    enabled: false # default false
    login: "${AUTH_LOGIN:login}" # default login
    password: "${AUTH_PASSWORD:password}" # default password
  ssl: # default {}
    enabled: false # default false
    root-cert-path: "${SSL_ROOT_CERT_PATH:./cert.pem}"  # default ./cert.pem
    key-path: "${SSL_KEY_PATH:./key.pem}" # default ./key.pem


# Custom labels and prefix that can be added to all metrics
custom: # default {}
  prefix: "" # default ""
  labels: # default {}
  # app: droxporter
  # system-type: agent

# Exporter metrics. The interval is used only for reading CPU and memory.
# The metrics list is used to enable only the metrics we need.
exporter-metrics: # default {}
  enabled: true # default false
  interval: 5s  # default 5s
  metrics: # default []
    - cpu
    - memory
    - limits
    - requests
    - jobs

# Default keys to be used
default-keys: [ "${EXPORTER_KEY}" ] # default []

# Droplet polling is always enabled, otherwise there is no point in enabling the exporter.
# Specific keys can be used for polling.
# URL is specified in case Digital Ocean makes changes, but metrics collection should continue.
# Metrics from the metrics section are always included in the response and do not require additional requests,
# so they will not affect the limits. However, if you want to disable them, you have the option.
# 1-hour interval seems reasonable, as droplets rarely change.
droplets: # default {}
  keys: [ ] # default []
  url: "https://api.digitalocean.com/v2/droplets"
  interval: 1h # default 1h
  metrics: # default []
    - memory
    - vcpu
    - disk
    - status

# App Platform polling.
apps:
  keys: [ ]
  url: "https://api.digitalocean.com/v2/apps"
  interval: 1h # default 1h
  # No support for app specific metrics yet
  metrics: [ ] # default []

# List of metrics to be loaded
# A separate request will be executed for each type within 'types' for each droplet, so be careful
# not to add too many to avoid hitting request limits
# The intervals are wide because:
##  1. To avoid hitting limits
##  2. Data on Digital Ocean updates infrequently
droplet-metrics: # default {}
  base-url: "https://api.digitalocean.com/v2/monitoring/metrics/droplet"
  bandwidth: # default {}
    types: [ private_inbound, private_outbound, public_inbound, public_outbound ] # default []
    keys: [ ] # default []
    interval: 60s # default 60s
    enabled: true # default false
  cpu: # default {}
    keys: [ ] # default []
    interval: 45s # default 45s
    enabled: true # default false
  filesystem: # default {}
    types: [ free ] # default [], full list: [ free, size ]
    keys: [ ] # default []
    interval: 120s # default 120s
    enabled: true # default false
  memory: # default {}
    types: [ total, available ] # default [], full list: [ cached, free, total, available ]
    keys: [ ] # default []
    interval: 120s # default 120s
    enabled: true # default false
  load: # default {}
    types: [ ] # default [], full list: [ load_1, load_5, load_15 ]
    keys: [ ] # default []
    interval: 120s # default 120s
    enabled: false # default false
